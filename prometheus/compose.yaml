networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:

services:

  prometheus:
    image: 715788907281.dkr.ecr.ca-central-1.amazonaws.com/monitoring/prometheus:1.0
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
    restart: unless-stopped
    command:
      - '--web.listen-address=0.0.0.0:9090'
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.min-block-duration=2h'
      - '--storage.tsdb.max-block-duration=2h'
    ports:
      - 9090:9090
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring

  alertmanager:
    image: 715788907281.dkr.ecr.ca-central-1.amazonaws.com/monitoring/alertmanager:1.0
    container_name: alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager_config.yaml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - monitoring

  thanos_sidecar:
    image: 715788907281.dkr.ecr.ca-central-1.amazonaws.com/monitoring/thanos:1.0
    container_name: thanos_sidecar
    volumes:
      - prometheus_data:/prometheus
    command:
      - 'thanos'
      - 'sidecar'
      - '--objstore.config-file=/etc/thanos/storage.yaml'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus:9090'
      - '--grpc-address=0.0.0.0:10902'
      - '--http-address=0.0.0.0:10901'
    ports:
      - 10901:10901
      - 10902:10902
    networks:
      - monitoring
    depends_on:
      - prometheus

  thanos_query:
    image: 715788907281.dkr.ecr.ca-central-1.amazonaws.com/monitoring/thanos:1.0
    container_name: thanos_query
    volumes:
      - prometheus_data:/prometheus
    command:
      - 'thanos'
      - 'query'
      - '--http-address=0.0.0.0:9091'
      - '--grpc-address=0.0.0.0:9092'
      - '--endpoint=thanos_sidecar:10902'
    ports:
      - 9091:9091
      - 9092:9092
    networks:
      - monitoring
    depends_on:
      - thanos_sidecar