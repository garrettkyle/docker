global:
  # The default SMTP from address
  smtp_from: 'alertmanager@example.com'
  # The SMTP smarthost to send emails via
  smtp_smarthost: 'smtp.example.com:587'
  # SMTP authentication credentials (optional)
  smtp_auth_username: 'username'
  smtp_auth_password: 'password'

route:
  # Root route configuration
  group_by: ['alertname']
  group_wait: 30s        # Wait for 30 seconds before grouping alerts
  group_interval: 5m     # After the first alert in a group, wait 5 minutes before sending a new notification for the same group
  repeat_interval: 4h    # If an alert repeats in the same group, repeat the notification every 4 hours
  receiver: 'email-alerts' # Default receiver for alerts
  
  routes:
    - match:
        severity: 'critical'  # Match alerts with the severity label set to 'critical'
      receiver: 'pagerduty-alerts'  # Route critical alerts to PagerDuty
      group_wait: 1m             # Shorter grouping for critical alerts
      group_interval: 1m         # Group critical alerts every minute
      repeat_interval: 30m       # Repeat critical alerts more frequently

receivers:
  - name: 'email-alerts'
    email_configs:
      - to: 'your-email@example.com'  # Replace with the actual recipient email
        send_resolved: true            # Send a notification when the alert is resolved

  - name: 'pagerduty-alerts'
    pagerduty_configs:
      - service_key: 'your-pagerduty-service-key'  # Replace with your actual PagerDuty service key
        severity: 'critical'                     # Severity level of the alert
        send_resolved: true                      # Send resolved alerts to PagerDuty

# Alertmanager's web interface settings
web:
  # HTTP service is enabled
  http_listen_address: '0.0.0.0:9093'  # The interface and port to listen on for web UI
  # The path to the web console (default is /)
  web_external_url: 'http://alertmanager.example.com:9093'  # The external URL for Alertmanager's web UI (optional)




# Per-target Alertmanager timeout when pushing alerts.
[ timeout: <duration> | default = 10s ]

# The api version of Alertmanager.
[ api_version: <string> | default = v2 ]

# Prefix for the HTTP path alerts are pushed to.
[ path_prefix: <path> | default = / ]

# Configures the protocol scheme used for requests.
[ scheme: <scheme> | default = http ]

# Sets the `Authorization` header on every request with the
# configured username and password.
# password and password_file are mutually exclusive.
basic_auth:
  [ username: <string> ]
  [ password: <secret> ]
  [ password_file: <string> ]

# Optional `Authorization` header configuration.
authorization:
  # Sets the authentication type.
  [ type: <string> | default: Bearer ]
  # Sets the credentials. It is mutually exclusive with
  # `credentials_file`.
  [ credentials: <secret> ]
  # Sets the credentials to the credentials read from the configured file.
  # It is mutually exclusive with `credentials`.
  [ credentials_file: <filename> ]


# Configures the scrape request's TLS settings.
tls_config:
  [ <tls_config> ]

# Custom HTTP headers to be sent along with each request.
# Headers that are set by Prometheus itself can't be overwritten.
http_headers:
  # Header name.
  [ <string>:
    # Header values.
    [ values: [<string>, ...] ]
    # Headers values. Hidden in configuration page.
    [ secrets: [<secret>, ...] ]
    # Files to read header values from.
    [ files: [<string>, ...] ] ]

# Configure whether HTTP requests follow HTTP 3xx redirects.
[ follow_redirects: <boolean> | default = true ]

# Whether to enable HTTP2.
[ enable_http2: <boolean> | default: true ]

# List of DNS service discovery configurations.
dns_sd_configs:
  [ - <dns_sd_config> ... ]

# List of EC2 service discovery configurations.
ec2_sd_configs:
  [ - <ec2_sd_config> ... ]

# List of file service discovery configurations.
file_sd_configs:
  [ - <file_sd_config> ... ]


# List of Docker service discovery configurations.
docker_sd_configs:
  [ - <docker_sd_config> ... ]

# List of HTTP service discovery configurations.
http_sd_configs:
  [ - <http_sd_config> ... ]


# List of Kubernetes service discovery configurations.
kubernetes_sd_configs:
  [ - <kubernetes_sd_config> ... ]

# List of labeled statically configured Alertmanagers.
static_configs:
  [ - <static_config> ... ]

# List of Alertmanager relabel configurations.
relabel_configs:
  [ - <relabel_config> ... ]

# List of alert relabel configurations.
alert_relabel_configs:
  [ - <relabel_config> ... ]